name: Monitor kubectl repository for new versions

on:
  schedule:
  - cron: "0 2 * * *"
  workflow_dispatch:

jobs:
  get-stable-version:
    runs-on: ubuntu-latest
    outputs:
      latest: ${{ env.KUBECTL_VERSION }}
      tags: ${{ env.TAGS }}
      diff: ${{ steps.check-diff.outcome }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2.4.2
    - name: Get latest stable version of Kubernetes
      # run: curl -L -s -o version.txt https://dl.k8s.io/release/stable.txt
      run: echo "v1.24.10" > version.txt
    - name: Check for differences in git repo (aka a new version of kubectl)
      id: check-diff
      run: git diff --quiet
      continue-on-error: true
    - name: Echo diff
      run: echo "${{ steps.check-diff.outcome }}"
    - name: Upload version.txt
      uses: actions/upload-artifact@v3
      if: ${{ steps.check-diff.outcome == 'failure' }}
      with:
        name: version
        path: version.txt
  
  commit-new-version:
    needs: [get-stable-version]
    if: ${{ needs.get-stable-version.outputs.diff == 'failure' }}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2.4.2
    - name: Download version.txt
      uses: actions/download-artifact@v3
      with:
        name: version
    - name: Get version number
      run: echo "VERSION_NUMBER=$(cat version.txt)" >> $GITHUB_ENV
    - name: Set git credentials
      run: |
        git config user.email "${{ github.actor }}@github.com"
        git config user.name "${{ github.actor }}"
    - name: Git add version.txt
      run: git add version.txt
    - name: Git commit
      run: git commit -m "Relese new version ${{ env.VERSION_NUMBER }}"
    - name: Tag commit
      run: git tag ${{ env.VERSION_NUMBER }}
    - name: Push
      run: |
        git push
        git push origin ${{ env.VERSION_NUMBER }}
